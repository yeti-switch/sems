name: build
on:
  push:
    branches:
      - "*"
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    container: debian:bookworm
    steps:
      - run: apt update
      - name: install aux deps
        run: apt -y --no-install-recommends install git ca-certificates curl gnupg
      - name: add pgdg pkg repo
        run: >
          echo "deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt bookworm-pgdg main" >> /etc/apt/sources.list.d/pgdg.list &&
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg
      - name: add yeti pkg repo
        run: >
          echo "deb [arch=amd64] http://pkg.yeti-switch.org/debian/bookworm 1.13 main" > /etc/apt/sources.list.d/yeti.list &&
          curl https://pkg.yeti-switch.org/key.gpg | gpg --dearmor > /etc/apt/trusted.gpg.d/pkg.yeti-switch.org.gpg
      - run: apt update

      - name: clone repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: install build-deps
        run: apt update && apt -y --no-install-recommends build-dep .
      - name: build
        run: debuild -us -uc -b -j$(nproc)

      - uses: furmur/upload-debian-pkg-action@v1
        with:
          pkgs: '../*.deb'
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
        env:
          PKG_API_BASE: ${{secrets.PKG_API_BASE}}
          AWS_ACCESS_KEY_ID: ${{secrets.DEB_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.DEB_AWS_SECRET_ACCESS_KEY}}
          AWS_ENDPOINT_URL: ${{secrets.DEB_AWS_ENDPOINT}}
        if: startsWith(github.ref, 'refs/tags/v')
