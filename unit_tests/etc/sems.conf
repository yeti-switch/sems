/* vim: set expandtab tabstop=4: */

signaling-interfaces {
    interface input {
        default-media-interface = input
        ip4 {
            sip-udp {
                address = 127.0.0.1
                port = 50600
                use-raw-sockets = off
            }
            sip-tcp {
                address = 127.0.0.1
                port = 50600
                connect-timeout = 2000
                static-client-port = on
                idle-timeout=900000
            }
        }
        /*ip6 {
            sip-udp {
                address = ::1
                port = 50600
                force-via-address = on
                use-raw-sockets = off
            }
            sip-tcp {
                address = ::1
                port = 50600
                use-raw-sockets = off
                static-client-port = on
                connect-timeout = 1000
                idle-timeout=900000
                static-client-port = on
            }
        }*/
    }
}

media-interfaces {
    interface input {
        srtp {
            enable_srtp=yes
            sdes {
                profiles = { AES_256_CM_HMAC_SHA1_80, AES_256_CM_HMAC_SHA1_32, AES_CM_128_HMAC_SHA1_80, AES_CM_128_HMAC_SHA1_32, NULL_HMAC_SHA1_80, NULL_HMAC_SHA1_32 }
            }
            zrtp {
                hashes = {S256, S384, N256, N384}
                ciphers = {AES1, AES2, AES3}
                authtags = {HS32, HS80, SK32, SK64}
                dhmodes = {DH3K, DH2K, EC25, EC38, EC52, MULT}
                sas = {B32, B256}
            }
        }
        ip4 {
            rtp {
                address = 127.0.0.1
                low-port = 16384
                high-port = 24575
                dscp = 46
                use-raw-sockets = off
            }
        }
        /*ip6 {
            rtp {
                address = ::1
                low-port = 16384
                high-port = 32767
                dscp = 46
                use-raw-sockets = off
            }
        }*/
    }
    interface rtsp {
        ip4 {
            rtsp {
                address = 127.0.0.1
                low-port = 24578
                high-port = 32767
            }
        }
    }
}


modules {
    path = {
        ./build/core/plug-in/wav,
        ./build/core/plug-in/uac_auth,
        ./build/apps/http,
        ./build/apps/jsonrpc,
        ./build/apps/postgresql,
        ./build/apps/registrar,
        ./build/apps/redis,
        ./build/apps/conference_mixer,
    }
    config_path=.

    module "wav"{}
    module "postgresql" {
        connection_log_dir = ./unit_tests/logs
    }

    module "jsonrpc" {
        listen {
            address = 127.0.0.1
            port = 7080
        }
        server_threads = 2
    }

    module "http_client" {
        resend_interval=5000
        resend_queue_max=0

        destination "test" {
            mode=post
            urls={http://127.0.0.1:56666/}
            content_type='text/plain'
            on_success { action = nothing }
            on_failure { action = requeue }
        }
    }

    module-global "redis" {
        max_batch_size = 10
        batch_timeout = 100
        max_queue_size = 200
    }

    module "registrar" {
        expires_min = 600
        expires_max = 7200
        expires_default = 1200
        redis {
            use_functions = no
            scripts_dir = ./apps/registrar/etc
            write {
                hosts = { 127.0.0.1:6379 }
            }
            read {
                hosts = { 127.0.0.1:6379 }
            }
        }
    }

    module "conference_mixer" {
        listen {
            address = 127.0.0.1
            port = 5002
        }

        neighbours {
            neighbour 1 {
                address = 127.0.0.1
                port = 5003
            }

            neighbour 2 {
                address = 127.0.0.1
                port = 5004
            }
        }
    }

    module "uac_auth" {}
}

routing {
    application="$(apphdr)"
}

general {
    node_id = 1

    stderr=no
    syslog_loglevel=2
    syslog_facility=LOCAL0

    max_shutdown_time = 10

    session_processor_threads=1
    media_processor_threads=1
    rtp_receiver_threads=1

    sip_udp_server_threads = 1
    sip_tcp_server_threads = 1

    max_forwards = 70

    session_limit {
        limit = 4000
        code = 509
        reason = "Node overloaded"
    }

    shutdown_mode {
        code = 508
        reason = "Node in shutdown mode"
        allow_uac = yes
    }

    signature="Phone.Systems CORE node"

    codec_order = { PCMA, PCMU, g722, opus }

    enable_rtsp=yes
    enable_srtp=yes
    enable_zrtp=yes

    pcap_upload_queue=pcap
    100rel=disabled

    force_symmetric_rtp=yes
    symmetric_rtp_mode=packets
    symmetric_rtp_packets=25

    dead_rtp_time=20
    log_dump_path=./build/unit_tests/logs/
    rsr_path=./build/unit_tests/rsr/
}
